{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport axios from \"axios\";\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport SimpleLightbox from 'simplelightbox';\n\n// 1. Отримуємо посилання на DOM-елементи\nconst itemUl = document.querySelector(\".gallery\");\nconst form = document.querySelector(\".form\");\nconst loaderWrapper = document.querySelector(\".loader-wrapper\");\n\n// 2. Ваша API-ключ та інші константи\nconst myApiKey = \"50762825-7fe49127b3d94f6c93c99dfe1\";\nconst imageType = \"photo\";\n\n// 3. Додаємо слухача подій до форми\nform.addEventListener(\"submit\", handleClick);\n\n// Функції для показу та приховування лоадера\nfunction showLoader() {\n    loaderWrapper.classList.remove(\"is-hidden\");\n}\n\nfunction hideLoader() {\n    loaderWrapper.classList.add(\"is-hidden\");\n}\n\n// --- Функція обробки відправки форми ---\nfunction handleClick(event) {\n    event.preventDefault(); // Завжди зупиняємо перезавантаження сторінки при сабміті\n\n    // 4. Отримуємо значення з поля вводу\n    const qwerry = event.target.elements['search-text'].value.trim(); // .trim() видаляє пробіли на початку/кінці\n\n    // 5. Очищаємо галерею перед новим пошуком (це важливо!)\n    itemUl.innerHTML = \"\";\n\n    // 6. Перевіряємо, чи є запит (не шукаємо порожні рядки)\n    if (qwerry === \"\") {\n        iziToast.info({\n            message: \"Будь ласка, введіть щось для пошуку.\",\n            position: \"topRight\"\n        });\n        return; // Зупиняємо виконання функції, якщо запит порожній\n    }\n\nshowLoader(); // <--- ПОКАЗУЄМО ЛОАДЕР\n\n    // 7. --- ТУТ ВІДПРАВЛЯЄМО ЗАПИТ AXIOS ---\n    // Це забезпечує, що запит відправляється ТІЛЬКИ коли користувач натискає \"Search\"\n    // і змінна `qwerry` вже має актуальне значення.\n    axios.get('https://pixabay.com/api/', {\n        params: {\n            key: myApiKey,\n            q: qwerry, // Використовуємо актуальне значення з поля вводу\n            image_type: imageType,\n            orientation: \"horizontal\", // Додаємо орієнтацію для кращих результатів\n            safesearch: true,          // Додаємо безпечний пошук\n            per_page: 40,\n        }\n    })\n    .then(response => {\n        const arr = response.data.hits;\n\n        if (arr.length === 0) {\n            iziToast.info({\n                message: \"На жаль, за вашим запитом не знайдено зображень. Спробуйте ще раз!\",\n                position: \"topRight\"\n            });\n            return; // Виходимо, якщо немає результатів\n        }\n\n        const galleryMarkup = arr\n            .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n                <li class=\"gallery-item\">\n                    <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                        <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n                    </a>\n                    <div class=\"info\">\n                        <p class=\"info-item\"><b>Likes:</b> ${likes}</p>\n                        <p class=\"info-item\"><b>Views:</b> ${views}</p>\n                        <p class=\"info-item\"><b>Comments:</b> ${comments}</p>\n                        <p class=\"info-item\"><b>Downloads:</b> ${downloads}</p>\n                    </div>\n                </li>\n            `)\n            .join(\"\");\n\n        itemUl.innerHTML = galleryMarkup;\n\n        // 8. Ініціалізуємо SimpleLightbox ТІЛЬКИ після додавання зображень\n        const lightbox = new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionDelay: 250,\n        });\n        lightbox.refresh(); // Оновити lightbox, щоб він побачив нові елементи\n\n        iziToast.success({\n            message: `Знайдено ${response.data.totalHits} зображень за вашим запитом.`,\n            position: \"topRight\"\n        });\n    })\n    .catch(error => {\n        console.error(\"Помилка запиту до Pixabay API:\", error);\n        iziToast.error({\n            message: \"Не вдалося отримати зображення. Будь ласка, спробуйте пізніше.\",\n            position: \"topRight\"\n        });\n    })\n    .finally(() => {\n        // 9. Очищаємо поле вводу після пошуку (для зручності користувача)\n          hideLoader(); // <--- ПРИХОВУЄМО ЛОАДЕР ПІСЛЯ ЗАВЕРШЕННЯ ЗАПИТУ\n        event.target.reset();\n    });\n}"],"names":["itemUl","form","loaderWrapper","myApiKey","imageType","handleClick","showLoader","hideLoader","event","qwerry","iziToast","axios","response","arr","galleryMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","error"],"mappings":"owBAOA,MAAMA,EAAS,SAAS,cAAc,UAAU,EAC1CC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAgB,SAAS,cAAc,iBAAiB,EAGxDC,EAAW,qCACXC,EAAY,QAGlBH,EAAK,iBAAiB,SAAUI,CAAW,EAG3C,SAASC,GAAa,CAClBJ,EAAc,UAAU,OAAO,WAAW,CAC9C,CAEA,SAASK,GAAa,CAClBL,EAAc,UAAU,IAAI,WAAW,CAC3C,CAGA,SAASG,EAAYG,EAAO,CACxBA,EAAM,eAAc,EAGpB,MAAMC,EAASD,EAAM,OAAO,SAAS,aAAa,EAAE,MAAM,OAM1D,GAHAR,EAAO,UAAY,GAGfS,IAAW,GAAI,CACfC,EAAS,KAAK,CACV,QAAS,uCACT,SAAU,UACtB,CAAS,EACD,MACH,CAELJ,IAKIK,EAAM,IAAI,2BAA4B,CAClC,OAAQ,CACJ,IAAKR,EACL,EAAGM,EACH,WAAYL,EACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACb,CACT,CAAK,EACA,KAAKQ,GAAY,CACd,MAAMC,EAAMD,EAAS,KAAK,KAE1B,GAAIC,EAAI,SAAW,EAAG,CAClBH,EAAS,KAAK,CACV,QAAS,qEACT,SAAU,UAC1B,CAAa,EACD,MACH,CAED,MAAMI,EAAgBD,EACjB,IAAI,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,oDAE3CL,CAAa;AAAA,0DACPD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,6DAGvBC,CAAK;AAAA,6DACLC,CAAK;AAAA,gEACFC,CAAQ;AAAA,iEACPC,CAAS;AAAA;AAAA;AAAA,aAG7D,EACA,KAAK,EAAE,EAEZrB,EAAO,UAAYc,EAGF,IAAIQ,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAC1B,CAAS,EACQ,QAAO,EAEhBZ,EAAS,QAAQ,CACb,QAAS,YAAYE,EAAS,KAAK,SAAS,+BAC5C,SAAU,UACtB,CAAS,CACT,CAAK,EACA,MAAMW,GAAS,CACZ,QAAQ,MAAM,iCAAkCA,CAAK,EACrDb,EAAS,MAAM,CACX,QAAS,iEACT,SAAU,UACtB,CAAS,CACT,CAAK,EACA,QAAQ,IAAM,CAETH,IACFC,EAAM,OAAO,OACrB,CAAK,CACL"}